{"version":3,"file":"index.js","sources":["../src/js/1-timer.js","../src/js/2-snackbar.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\nconst button = document.querySelector('[data-start]');\nconst dateInput = document.querySelector('#datetime-picker');\nconst timer = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate;\n\nconst dateOptions = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() > Date.now()) {\n      userSelectedDate = selectedDates[0];\n      button.disabled = false;\n    } else {\n      button.setAttribute('disabled', '');\n      iziToast.show({\n        title: 'Hey',\n        message: 'Please choose a date in the future',\n        theme: 'dark',\n        titleColor: 'black',\n        messageColor: 'black',\n        color: 'red',\n        position: 'topRight',\n      });\n    }\n  },\n};\n\nflatpickr(dateInput, dateOptions);\n\nbutton.addEventListener('click', handleTimer);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction handleTimer() {\n  const intervalId = setInterval(() => {\n    const time = userSelectedDate - Date.now();\n    if (time > 0) {\n      const timeLeft = convertMs(time);\n      for (let key in timeLeft) {\n        // console.log(timeLeft[key]);\n        timer[key].textContent = addLeadingZero(timeLeft[key]);\n        dateInput.setAttribute('disabled', '');\n        button.setAttribute('disabled', '');\n      }\n    } else {\n      clearInterval(intervalId);\n      dateInput.removeAttribute('disabled');\n    }\n  }, 1000);\n}\n\nfunction addLeadingZero(value) {\n  if (value.toString().length === 1) {\n    return `0${value}`;\n  }\n  return value;\n}\n","import iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleAddPromise);\n\nfunction handleAddPromise(ev) {\n  ev.preventDefault();\n  const delay = ev.target.elements.delay.value;\n  const state = ev.target.elements.state.value;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(state);\n      }\n      if (state === 'rejected') {\n        reject(state);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(() => {\n      iziToast.show({\n        title: '✅ ',\n        message: `Fulfilled promise in ${delay}ms`,\n        theme: 'dark',\n        titleColor: 'black',\n        messageColor: 'black',\n        color: 'green',\n        position: 'topRight',\n      });\n    })\n    .catch(() => {\n      iziToast.show({\n        title: '❌ ',\n        message: `Rejected promise in ${delay}ms`,\n        theme: 'dark',\n        titleColor: 'black',\n        messageColor: 'black',\n        color: 'red',\n        position: 'topRight',\n      });\n    });\n}\n"],"names":["button","dateInput","timer","userSelectedDate","dateOptions","selectedDates","iziToast","flatpickr","handleTimer","convertMs","ms","days","hours","minutes","seconds","intervalId","time","timeLeft","key","addLeadingZero","value","form","handleAddPromise","ev","delay","state","resolve","reject"],"mappings":"wvBASA,MAAMA,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAQ,CACZ,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAEJ,MAAMC,EAAc,CAClB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,OACpCF,EAAmBE,EAAc,CAAC,EAClCL,EAAO,SAAW,KAElBA,EAAO,aAAa,WAAY,EAAE,EAClCM,EAAS,KAAK,CACZ,MAAO,MACP,QAAS,qCACT,MAAO,OACP,WAAY,QACZ,aAAc,QACd,MAAO,MACP,SAAU,UAClB,CAAO,EAEJ,CACH,EAEAC,EAAUN,EAAWG,CAAW,EAEhCJ,EAAO,iBAAiB,QAASQ,CAAW,EAE5C,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASN,GAAc,CACrB,MAAMO,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAOb,EAAmB,KAAK,IAAG,EACxC,GAAIa,EAAO,EAAG,CACZ,MAAMC,EAAWR,EAAUO,CAAI,EAC/B,QAASE,KAAOD,EAEdf,EAAMgB,CAAG,EAAE,YAAcC,EAAeF,EAASC,CAAG,CAAC,EACrDjB,EAAU,aAAa,WAAY,EAAE,EACrCD,EAAO,aAAa,WAAY,EAAE,CAE1C,MACM,cAAce,CAAU,EACxBd,EAAU,gBAAgB,UAAU,CAEvC,EAAE,GAAI,CACT,CAEA,SAASkB,EAAeC,EAAO,CAC7B,OAAIA,EAAM,WAAW,SAAW,EACvB,IAAIA,CAAK,GAEXA,CACT,CCtFA,MAAMC,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,CAAgB,EAEhD,SAASA,EAAiBC,EAAI,CAC5BA,EAAG,eAAc,EACjB,MAAMC,EAAQD,EAAG,OAAO,SAAS,MAAM,MACjCE,EAAQF,EAAG,OAAO,SAAS,MAAM,MACvB,IAAI,QAAQ,CAACG,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXF,IAAU,aACZC,EAAQD,CAAK,EAEXA,IAAU,YACZE,EAAOF,CAAK,CAEf,EAAED,CAAK,CACZ,CAAG,EAGE,KAAK,IAAM,CACVlB,EAAS,KAAK,CACZ,MAAO,KACP,QAAS,wBAAwBkB,CAAK,KACtC,MAAO,OACP,WAAY,QACZ,aAAc,QACd,MAAO,QACP,SAAU,UAClB,CAAO,CACP,CAAK,EACA,MAAM,IAAM,CACXlB,EAAS,KAAK,CACZ,MAAO,KACP,QAAS,uBAAuBkB,CAAK,KACrC,MAAO,OACP,WAAY,QACZ,aAAc,QACd,MAAO,MACP,SAAU,UAClB,CAAO,CACP,CAAK,CACL"}